#!/bin/bash

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–≥–æ—Ç–∏–ø—É
channel_logo() {
  echo -e '\033[0;31m'
  echo -e '‚îå‚îê ‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚î¨‚îê‚î¨‚î¨ ‚î¨  ‚îå‚îÄ‚îê‚î¨ ‚î¨‚îå‚îê ‚î¨‚î¨  '
  echo -e '‚îú‚î¥‚îê‚îÇ ‚îÇ‚îÇ ‚î¨‚îú‚îÄ‚î§ ‚îÇ ‚îÇ‚îî‚î¨‚îò  ‚îî‚îÄ‚îê‚îî‚î¨‚îò‚îú‚î¥‚îê‚îÇ‚îÇ  '
  echo -e '‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚î¥ ‚î¥ ‚î¥ ‚î¥ ‚î¥   ‚îî‚îÄ‚îò ‚î¥ ‚îî‚îÄ‚îò‚î¥‚î¥‚îÄ‚îò'
  echo -e '\e[0m'
  echo -e "\n\n–ü—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞–π–∫—Ä–∞—â–∏–π –∫–∞–Ω–∞–ª —É –∫—Ä–∏–ø—Ç—ñ @bogatiy_sybil [üí∏]"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–¥–∏
install_node() {
  echo -e "${BLUE}–†–æ–∑–ø–æ—á–∏–Ω–∞—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–¥–∏...${NC}"
  
  if [ -d "$HOME/.titanedge" ]; then
    echo -e "${RED}–ü–∞–ø–∫–∞ .titanedge –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏–¥–∞–ª—ñ—Ç—å –Ω–æ–¥—É —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–Ω–æ–≤—É.${NC}"
    return 0
  fi

  sudo apt update -y && sudo apt upgrade -y
  sudo apt install -y nano git gnupg lsb-release apt-transport-https jq screen ca-certificates curl lsof

  ports=(1234 55702 48710)
  for port in "${ports[@]}"; do
    if [[ $(lsof -i :"$port" | wc -l) -gt 0 ]]; then
      echo -e "${RED}–ü–æ–º–∏–ª–∫–∞: –ø–æ—Ä—Ç $port –∑–∞–π–Ω—è—Ç–∏–π. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –º–æ–∂–ª–∏–≤–∞.${NC}"
      exit 1
    fi
  done

  echo -e "${GREEN}–í—Å—ñ –ø–æ—Ä—Ç–∏ –≤—ñ–ª—å–Ω—ñ! –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ...${NC}"
  
  if ! command -v docker &> /dev/null; then
    echo -e "${YELLOW}–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker...${NC}"
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
  else
    echo -e "${GREEN}Docker –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.${NC}"
  fi

  if ! command -v docker-compose &> /dev/null; then
    echo -e "${YELLOW}–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker-Compose...${NC}"
    sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  else
    echo -e "${GREEN}Docker-Compose –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.${NC}"
  fi

  echo -e "${CYAN}–ù–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –Ω–æ–¥—É —á–µ—Ä–µ–∑ –º–µ–Ω—é.${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –Ω–æ–¥–∏
launch_node() {
  echo -e "${BLUE}–ó–∞–ø—É—Å–∫ –Ω–æ–¥–∏...${NC}"
  
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker stop
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker rm

  echo -e "${YELLOW}–í–≤–µ–¥—ñ—Ç—å –≤–∞—à HASH:${NC}"
  read HASH

  docker run --network=host -d -v ~/.titanedge:$HOME/.titanedge nezha123/titan-edge
  sleep 10

  docker run --rm -it -v ~/.titanedge:$HOME/.titanedge nezha123/titan-edge bind --hash=$HASH https://api-test1.container1.titannet.io/api/v2/device/binding
  
  echo -e "${GREEN}–ù–æ–¥–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–æ–¥–∏
remove_node() {
  echo -e "${BLUE}–í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–æ–¥–∏...${NC}"

  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker stop
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker rm

  sudo rm -rf $HOME/.titanedge

  echo -e "${GREEN}–ù–æ–¥—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ª–æ–≥—ñ–≤
view_logs() {
  echo -e "${BLUE}–ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤ –Ω–æ–¥–∏...${NC}"
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker logs
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –Ω–æ–¥–∏
restart_node() {
  echo -e "${BLUE}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥–∏...${NC}"
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker restart
  echo -e "${GREEN}–ù–æ–¥–∞ —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–æ–¥–∏
stop_node() {
  echo -e "${BLUE}–ó—É–ø–∏–Ω–∫–∞ –Ω–æ–¥–∏...${NC}"
  docker ps -a --filter "ancestor=nezha123/titan-edge" --format "{{.ID}}" | xargs -r docker stop
  echo -e "${GREEN}–ù–æ–¥–∞ –∑—É–ø–∏–Ω–µ–Ω–∞!${NC}"
}

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
while true; do
  channel_logo
  CHOICE=$(whiptail --title "–ú–µ–Ω—é –¥—ñ–π" \
    --menu "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:" 15 60 6 \
    "1" "üõ† –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É" \
    "2" "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É" \
    "3" "üìú –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–≥–∏" \
    "4" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É" \
    "5" "‚õî –ó—É–ø–∏–Ω–∏—Ç–∏ –Ω–æ–¥—É" \
    "6" "üóë –í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É" \
    "7" "‚ùå –í–∏—Ö—ñ–¥" \
    3>&1 1>&2 2>&3)

  case $CHOICE in
    1)
      install_node
      ;;
    2)
      launch_node
      ;;
    3)
      view_logs
      ;;
    4)
      restart_node
      ;;
    5)
      stop_node
      ;;
    6)
      remove_node
      ;;
    7)
      echo -e "${CYAN}–í–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏.${NC}"
      exit 0
      ;;
    *)
      echo -e "${RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.${NC}"
      ;;
  esac
done
