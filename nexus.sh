#!/bin/bash
set -e

# --- –ö–æ–ª—å–æ—Ä–∏ ---
GREEN="\e[32m"
RED="\e[31m"
PINK="\e[35m"
NC="\e[0m"

# --- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–≥–æ—Ç–∏–ø—É ---
bash <(curl -s https://raw.githubusercontent.com/Baryzhyk/nodes/refs/heads/main/logo.sh)

# --- –ê–Ω—ñ–º–∞—Ü—ñ—è ---
animate_loading() {
    for ((i = 1; i <= 3; i++)); do
        printf "\r${GREEN}–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–µ–Ω—é${NC}."
        sleep 0.3
        printf "\r${GREEN}–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–µ–Ω—é${NC}.."
        sleep 0.3
        printf "\r${GREEN}–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–µ–Ω—é${NC}..."
        sleep 0.3
    done
    echo ""
}

animate_loading

# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ whiptail ---
if ! command -v whiptail &>/dev/null; then
    echo -e "${RED}whiptail –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ...${NC}"
    sudo apt update && sudo apt install -y whiptail
fi

# --- –§—É–Ω–∫—Ü—ñ—è: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker ---
install_docker() {
    if ! command -v docker &>/dev/null; then
        echo -e "${PINK}Docker –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ...${NC}"
        sudo apt update
        sudo apt install -y curl ca-certificates apt-transport-https gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/$(. /etc/os-release && echo "$ID")/gpg \
            | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        echo \
          "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
           https://download.docker.com/linux/$(. /etc/os-release && echo "$ID") \
           $(. /etc/os-release && echo "$VERSION_CODENAME") stable" \
          | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt update
        sudo apt install -y docker-ce docker-ce-cli containerd.io
        echo -e "${GREEN}‚úî Docker –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
    else
        echo -e "${GREEN}‚úî Docker –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (${NC}$(docker --version)${GREEN})${NC}"
    fi
}

# --- –§—É–Ω–∫—Ü—ñ—è: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose ---
install_docker_compose() {
    if ! command -v docker-compose &>/dev/null; then
        echo -e "${PINK}Docker Compose –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ...${NC}"
        sudo apt update && sudo apt install -y wget jq

        COMPOSE_VER=$(wget -qO- https://api.github.com/repos/docker/compose/releases/latest | jq -r ".tag_name")

        sudo wget -O /usr/local/bin/docker-compose \
            "https://github.com/docker/compose/releases/download/${COMPOSE_VER}/docker-compose-$(uname -s)-$(uname -m)"
        sudo chmod +x /usr/local/bin/docker-compose

        DOCKER_CLI_PLUGINS=${DOCKER_CLI_PLUGINS:-"$HOME/.docker/cli-plugins"}
        mkdir -p "$DOCKER_CLI_PLUGINS"
        curl -fsSL \
            "https://github.com/docker/compose/releases/download/${COMPOSE_VER}/docker-compose-$(uname -s)-$(uname -m)" \
            -o "${DOCKER_CLI_PLUGINS}/docker-compose"
        chmod +x "${DOCKER_CLI_PLUGINS}/docker-compose"

        echo -e "${GREEN}‚úî Docker Compose ${COMPOSE_VER} –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
    else
        echo -e "${GREEN}‚úî Docker Compose –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (${NC}$(docker-compose --version)${GREEN})${NC}"
    fi
}

# --- –§—É–Ω–∫—Ü—ñ—è: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—É–∑–ª–∞ ---
install_node() {
    install_docker
    install_docker_compose
    sudo apt install -y screen

    docker pull nexusxyz/nexus-cli:latest

    read -p "–í—Å—Ç–∞–≤—Ç–µ –≤–∞—à node id: " PRIVATE_KEY

    screen -S nexus -dm bash -c "docker run -it --init --name nexus nexusxyz/nexus-cli:latest start --node-id $PRIVATE_KEY"
    echo -e "${GREEN}‚úÖ –í—É–∑–æ–ª –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.${NC}"
    echo -e "${GREEN}‚û° –î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ª–æ–≥—ñ–≤: screen -r nexus${NC}"
    echo -e "${GREEN}‚Ü© –î–ª—è –≤–∏—Ö–æ–¥—É –∑ –ª–æ–≥—ñ–≤: Ctrl+A, –ø–æ—Ç—ñ–º D${NC}"
}

# --- –§—É–Ω–∫—Ü—ñ—è: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—É–∑–ª–∞ ---
restart_node() {
    echo -e "${RED}‚ôª –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—É–∑–ª–∞...${NC}"
    screen -XS nexus quit 2>/dev/null
    docker stop nexus 2>/dev/null || true
    docker rm nexus 2>/dev/null || true

    read -p "–í—Å—Ç–∞–≤—Ç–µ –≤–∞—à node id: " PRIVATE_KEY

    screen -S nexus -dm bash -c "docker run -it --init --name nexus nexusxyz/nexus-cli:latest start --node-id $PRIVATE_KEY"
    echo -e "${GREEN}‚úÖ –í—É–∑–æ–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ.${NC}"
}

# --- –§—É–Ω–∫—Ü—ñ—è: –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—É–∑–ª–∞ ---
delete_node() {
    echo -e "${RED}üóë –í–∏–¥–∞–ª—è—î–º–æ –≤—É–∑–æ–ª...${NC}"
    screen -XS nexus quit 2>/dev/null
    docker stop nexus 2>/dev/null || true
    docker rm nexus 2>/dev/null || true
    docker rmi nexusxyz/nexus-cli:latest 2>/dev/null || true
    echo -e "${GREEN}‚úÖ –í—É–∑–æ–ª –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–µ–Ω–æ.${NC}"
}

# --- –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ---
CHOICE=$(whiptail --title "–ú–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è Nexus" \
  --menu "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:" 20 60 10 \
  "1" "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É" \
  "2" "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–≥–∏" \
  "3" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É" \
  "4" "–í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É" \
  3>&1 1>&2 2>&3)

# --- –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É ---
if [ $? -ne 0 ]; then
  echo -e "${RED}‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ. –í–∏—Ö—ñ–¥.${NC}"
  exit 1
fi

case $CHOICE in
  1) install_node ;;
  2)
    screen -r nexus || echo -e "${RED}‚ùå –°–µ—Å—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ú–æ–∂–ª–∏–≤–æ –≤—É–∑–æ–ª –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.${NC}"
    ;;
  3) restart_node ;;
  4) delete_node ;;
  *) echo -e "${RED}–ù–µ–≤—ñ–¥–æ–º–∞ –æ–ø—Ü—ñ—è.${NC}" ;;
esac
